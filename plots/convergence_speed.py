"""DBD"""

# 2 layers, 4 qubits, freeze = 0.7, s =100, CZ
dbd_x2 = [3300.0, 4200.0, 5100.0, 6000.0, 6900.0, 7800.0, 8700.0, 9600.0, 10500.0, 11400.0, 12300.0, 13200.0, 14100.0, 15000.0, 15900.0, 16800.0, 17700.0, 18600.0, 19500.0, 20400.0, 21300.0, 22200.0, 23100.0, 24000.0, 24900.0, 25800.0, 26700.0, 27600.0, 28500.0, 29400.0, 30300.0, 31200.0, 32100.0, 33000.0, 33900.0, 34800.0, 35700.0, 36600.0, 37500.0, 38400.0, 39300.0, 40200.0, 41100.0, 42000.0, 42900.0, 43800.0, 44700.0, 45600.0, 46500.0, 47400.0, 48300.0, 49200.0, 50100.0, 51000.0]
dbd_y2 = [2.2601, 1.6362, 1.4126, 1.4172, 1.3178, 1.2632, 1.2160, 1.1196, 1.3276, 1.3607, 1.2972, 1.2779, 1.2139, 1.1946, 1.2066, 1.1926, 1.1543, 1.2276, 1.2967, 1.1149, 1.2339, 1.0850, 1.1592, 1.1683, 1.2721, 1.2403, 1.2108, 1.1759, 1.3272, 1.3182, 1.2163, 1.2078, 1.1327, 1.1950, 1.1895, 1.1635, 1.2385, 1.2049, 1.0820, 1.1622, 1.1218, 1.1233, 1.0876, 1.0989, 1.1932, 1.1661, 1.0708, 1.1285, 1.1758, 1.1423, 1.1577, 1.1071, 1.1668, 1.0552]

# 3 layers, 8 qubits, freeze = 0.7, s =100, CZ
dbd_x3 = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0]
dbd_y3 = [2.0274, 1.7452, 1.4768, 1.3530, 1.2625, 1.1924, 1.1931, 1.1814, 1.1273, 1.1641, 1.1279, 1.0971, 1.1346, 1.1877, 1.0912, 1.1220, 1.0943, 1.1112, 1.0478, 1.0139, 1.0497, 0.9923, 1.1051, 0.9630, 1.0925, 1.0955, 1.0439, 0.9927, 1.0201, 1.0658, 1.0576, 0.9797, 0.9829, 0.9762]

# 5 layers, 10 qubits, freeze = 0.7, s =100, CZ
dbd_x4 = [0, 20100.0, 26000.0, 31900.0, 37800.0, 43700.0, 49600.0, 55500.0, 61400.0, 67300.0, 73200.0, 79100.0, 85000.0, 90900.0, 96800.0, 102700.0, 108600.0, 114500.0, 120400.0, 126300.0, 132200.0, 138100.0, 144000.0, 149900.0, 155800.0, 161700.0, 167600.0, 173500.0, 179400.0, 185300.0, 191200.0, 197100.0, 203000.0, 208900.0, 214800.0, 220700.0, 226600.0, 232500.0, 238400.0, 244300.0, 250200.0, 256100.0, 262000.0, 267900.0, 273800.0, 279700.0, 285600.0, 291500.0, 297400.0, 303300.0]
dbd_y4 = [1.5886, 1.4421, 1.3339, 1.2338, 1.2534, 1.1725, 1.1764, 1.0851, 0.9952, 1.1428, 1.1273, 1.1108, 1.0303, 1.0702, 1.0177, 1.0337, 1.0432, 0.9906, 1.0841, 1.0496, 0.9657, 0.9659, 0.9406, 0.9628, 0.9892, 1.0737, 0.9750, 0.9664, 0.9353, 1.0575, 1.0021, 0.9933, 1.0111, 0.9443, 0.9244, 1.0058, 0.9451, 1.0261, 0.9144, 0.9632, 0.9258, 0.9207, 0.8422, 0.8166, 0.8589, 0.8820, 0.9754, 0.7680, 0.8650, 0.8716]

"""SGD"""
# 2-layers, 4-qubits, s=100, lr=0.01 CZ
sgd_x2 = [0, 3300, 6600, 9900, 13200, 16500, 19800, 23100, 26400, 29700, 33000, 36300, 39600, 42900, 46200, 49500, 52800, 56100, 59400, 62700, 66000, 69300, 72600, 75900, 79200, 82500, 85800]
sgd_y2 = [2.9918, 2.2601, 1.6344, 1.3792, 1.3743, 1.2716, 1.2299, 1.1983, 1.0957, 1.2849, 1.3308, 1.2721, 1.2904, 1.2058, 1.2028, 1.1979, 1.2012, 1.1501, 1.2180, 1.2890, 1.1164, 1.1974, 1.0852, 1.1254, 1.1376, 1.2372, 1.1759]

# 3-layers, 8-qubits, s=100, lr=0.01 CZ
sgd_x3 = [0, 9700, 19400, 29100, 38800, 48500, 58200, 67900, 77600, 87300, 97000, 106700, 116400, 126100]
sgd_y3 = [2.0274, 1.7452, 1.4761, 1.3496, 1.2590, 1.1862, 1.1937, 1.1777, 1.1223, 1.1617, 1.1224, 1.0930, 1.1238, 1.1816]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ
sgd_x4 = [0, 20100, 40200, 60300, 80400, 100500, 120600, 140700, 160800, 180900, 201000, 221100, 241200, 261300, 281400, 301500]
sgd_y4 = [1.5886, 1.4421, 1.3325, 1.2170, 1.2367, 1.1476, 1.1508, 1.0767, 0.9733, 1.1303, 1.1120, 1.0925, 1.0091, 1.0604, 1.0064, 1.0196]

"""Baseline Adam"""
# 4 qubits, 2 layers, lr 0.01, s=100 CZ
b_adam_x6 = [0, 3300, 6600, 9900, 13200, 16500, 19800, 23100, 26400, 29700, 33000, 36300, 39600, 42900, 46200, 49500, 52800, 56100, 59400, 62700, 66000, 69300, 72600, 75900, 79200, 82500, 85800, 89100, 92400, 95700, 99000, 102300, 105600, 108900, 112200]
b_adam_y6 = [2.9918, 2.4948, 1.8205, 1.4789, 1.3495, 1.2319, 1.1979, 1.1012, 1.0403, 1.1658, 1.1188, 1.1427, 1.0379, 1.0805, 1.1041, 1.0700, 1.0526, 1.0173, 1.0868, 1.1227, 1.0023, 1.0600, 0.9878, 1.0471, 1.0553, 1.1459, 1.0825, 1.0412, 1.0293, 1.1177, 1.0891, 1.0411, 1.0796, 1.0399, 1.0548]

# 8 qubits, 3 layers, lr 0.01, s=100 CZ
b_adam_x7 = [0, 9700, 19400, 29100, 38800, 48500, 58200, 67900, 77600, 87300, 97000, 106700]
b_adam_y7 = [2.0274, 1.6942, 1.3546, 1.2620, 1.1388, 1.0461, 1.0365, 0.9839, 0.9389, 0.9850, 0.9167, 0.9050]

# 10 qubits, 5 layers, lr 0.01, s=100 CZ
b_adam_x8 = [0, 20100, 40200, 60300, 80400, 100500, 120600, 140700, 160800, 180900, 201000, 221100, 241200, 261300, 281400, 301500]
b_adam_y8 = [1.5886, 1.2655, 1.1624, 0.9725, 1.0071, 0.9007, 0.8280, 0.7826, 0.6706, 0.8158, 0.7176, 0.7311, 0.6423, 0.6890, 0.6800, 0.6480]

"""wsbd SGD"""
# 2 layers, 4 qubits, f=70, s = 100 CZ
a3_x2 = [0, 3300.0, 4200.0, 5100.0, 6000.0, 6900.0, 7800.0, 8700.0, 9600.0, 10500.0, 11400.0, 12300.0, 13200.0, 14100.0, 15000.0, 15900.0, 16800.0, 17700.0, 18600.0, 19500.0, 20400.0, 21300.0, 22200.0, 23100.0, 24000.0, 24900.0, 25800.0, 26700.0, 27600.0, 28500.0, 29400.0, 30300.0, 31200.0, 32100.0, 33000.0, 33900.0, 34800.0, 35700.0, 36600.0, 37500.0, 38400.0, 39300.0, 40200.0, 41100.0, 42000.0, 42900.0, 43800.0, 44700.0, 45600.0, 46500.0, 47400.0, 48300.0, 49200.0, 50100.0, 51000.0]
a3_y2 = [2.9918, 2.2601, 1.6421, 1.4025, 1.4227, 1.3377, 1.2745, 1.2567, 1.1395, 1.3265, 1.3301, 1.2714, 1.2941, 1.2167, 1.1995, 1.2005, 1.2129, 1.1696, 1.2267, 1.2782, 1.1342, 1.2148, 1.1003, 1.1540, 1.1601, 1.2429, 1.2116, 1.1920, 1.1685, 1.2964, 1.2808, 1.2211, 1.2305, 1.1553, 1.2284, 1.1775, 1.1645, 1.2421, 1.2040, 1.0808, 1.1240, 1.1208, 1.1537, 1.1229, 1.0965, 1.1872, 1.2009, 1.1035, 1.1357, 1.1697, 1.1770, 1.2406, 1.1681, 1.2039, 1.0936]

# 3-layers, 8-qubits, s=100, lr=0.01 CZ
a3_x5 = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0, 105400.0, 108300.0, 111200.0, 114100.0, 117000.0, 119900.0, 122800.0]
a3_y5 = [2.0274, 1.7452, 1.4768, 1.3541, 1.2673, 1.1984, 1.1971, 1.1813, 1.1278, 1.1644, 1.1252, 1.0963, 1.1312, 1.1838, 1.0869, 1.1238, 1.0916, 1.1116, 1.0413, 1.0078, 1.0536, 0.9699, 1.1150, 0.9391, 1.0621, 1.0303, 0.9673, 0.9566, 0.9866, 1.0029, 0.9787, 0.9345, 0.9225, 0.9106, 0.9664, 0.9959, 0.9734, 0.8487, 0.9513, 0.9973, 0.9527]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ F=70
a3_x6 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0]
a3_y6 = [1.5886, 1.4421, 1.3379, 1.2362, 1.2530, 1.1675, 1.1791, 1.0984, 1.0070, 1.1622, 1.1304, 1.1193, 1.0240, 1.0785, 1.0121, 1.0249, 1.0346, 0.9721, 1.0587, 1.0144, 0.9304, 0.9053, 0.8971, 0.8689, 0.9257, 0.9279, 0.8393, 0.8213, 0.8202, 0.9244, 0.8347, 0.8170, 0.8351, 0.7758, 0.7488, 0.8404, 0.7926, 0.8049, 0.7548, 0.8660, 0.8136, 0.7194, 0.6753, 0.6117, 0.7520, 0.7836, 0.7989, 0.6564]

"""wsbd SGD no reset"""
# 2-layers, 4-qubits, s=100, lr=0.01 CZ, f=70
no_r_x = [0, 3300.0, 4200.0, 5100.0, 6000.0, 6900.0, 7800.0, 8700.0, 9600.0, 10500.0, 11400.0, 12300.0, 13200.0, 14100.0, 15000.0, 15900.0, 16800.0, 17700.0, 18600.0, 19500.0, 20400.0, 21300.0, 22200.0, 23100.0, 24000.0, 24900.0, 25800.0, 26700.0, 27600.0, 28500.0, 29400.0, 30300.0, 31200.0, 32100.0, 33000.0, 33900.0, 34800.0, 35700.0, 36600.0, 37500.0, 38400.0, 39300.0, 40200.0, 41100.0, 42000.0, 42900.0, 43800.0, 44700.0, 45600.0, 46500.0, 47400.0, 48300.0, 49200.0, 50100.0, 51000.0]
no_r_y = [2.9918, 2.2601, 1.6421, 1.4160, 1.4431, 1.3637, 1.2837, 1.2421, 1.1640, 1.3175, 1.3862, 1.3017, 1.3493, 1.2322, 1.2273, 1.2214, 1.2404, 1.1575, 1.2366, 1.2929, 1.1498, 1.2034, 1.0962, 1.1224, 1.1584, 1.2480, 1.2023, 1.1863, 1.1566, 1.2883, 1.2748, 1.2023, 1.2130, 1.1567, 1.2053, 1.1585, 1.1313, 1.2120, 1.1585, 1.0847, 1.0817, 1.0791, 1.0985, 1.0508, 1.0833, 1.1511, 1.1515, 1.0490, 1.0894, 1.1377, 1.1495, 1.1958, 1.1351, 1.1397, 1.0516]

# 3-layers, 8-qubits, s=100, lr=0.01 CZ, f=70
no_r_x2 = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0]
no_r_y2 = [2.0274, 1.7452, 1.4761, 1.3505, 1.2624, 1.1953, 1.2006, 1.1903, 1.1414, 1.1840, 1.1585, 1.1104, 1.1753, 1.2249, 1.1465, 1.1832, 1.1414, 1.1271, 1.1498, 1.0658, 1.0703, 1.0519, 1.1016, 0.9981, 1.0958, 1.0843, 1.0070, 0.9841, 1.0266, 1.0512, 1.0130, 0.9508, 0.9420, 0.9588]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ, f=70
no_r_x3 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0]
no_r_y3 = [1.5886, 1.4421, 1.3379, 1.2438, 1.2588, 1.1772, 1.1960, 1.1146, 1.0305, 1.1532, 1.1400, 1.1151, 1.0380, 1.0800, 1.0205, 1.0342, 1.0518, 0.9670, 1.0649, 1.0419, 0.9484, 0.9529, 0.9300, 0.9257, 0.9680, 1.0181, 0.9475, 0.9268, 0.9196, 0.9948, 0.9241, 0.9189, 0.9023, 0.9058, 0.8469, 0.8730, 0.8935, 0.7937, 0.8665, 0.8623, 0.7948, 0.8059, 0.8091, 0.7988, 0.8426, 0.8377, 0.8559, 0.8300]

"""WSBD Adam"""
# 4 qubits, 2 layers, lr 0.01, s=100 CZ, F=70
a3_adam_x6 = [0, 3300.0, 4200.0, 5100.0, 6000.0, 6900.0, 7800.0, 8700.0, 9600.0, 10500.0, 11400.0, 12300.0, 13200.0, 14100.0, 15000.0, 15900.0, 16800.0, 17700.0, 18600.0, 19500.0, 20400.0, 21300.0, 22200.0, 23100.0, 24000.0, 24900.0, 25800.0, 26700.0, 27600.0, 28500.0, 29400.0, 30300.0, 31200.0, 32100.0, 33000.0, 33900.0, 34800.0, 35700.0, 36600.0, 37500.0, 38400.0, 39300.0, 40200.0, 41100.0, 42000.0, 42900.0, 43800.0, 44700.0, 45600.0, 46500.0, 47400.0, 48300.0, 49200.0, 50100.0, 51000.0, 51900.0, 52800.0, 53700.0, 54600.0, 55500.0, 56400.0, 57300.0, 58200.0, 59100.0]
a3_adam_y6 = [2.9918, 2.4948, 1.8557, 1.5243, 1.4154, 1.3038, 1.2341, 1.1844, 1.0945, 1.2401, 1.2307, 1.2270, 1.1723, 1.1835, 1.2111, 1.0880, 1.1210, 1.1093, 1.0822, 1.1817, 1.0925, 1.1003, 1.0561, 1.1301, 1.0879, 1.2266, 1.1370, 1.0915, 1.0858, 1.1506, 1.1048, 1.0921, 1.1147, 1.0634, 1.1095, 1.0747, 1.0558, 1.1151, 1.0610, 1.0470, 0.9971, 1.0360, 1.0351, 1.0397, 1.0256, 1.0737, 1.0961, 0.9980, 1.0111, 1.0991, 1.0411, 1.0537, 1.0723, 1.0828, 1.0264, 0.9958, 1.0575, 1.1185, 1.0278, 1.0481, 1.0419, 1.0566, 1.0971, 1.0615]

# 8 qubits, 3 layers, lr 0.01, s=100 CZ, F=70
a3_adam_x7 = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0]
a3_adam_y7 = [2.0274, 1.6942, 1.3578, 1.2725, 1.1621, 1.1030, 1.0752, 1.0492, 1.0391, 1.0231, 0.9765, 0.9444, 0.8635, 0.8733, 0.8615, 0.8604, 0.7951, 0.7968, 0.8537, 0.7714, 0.7233, 0.6602, 0.7775, 0.6991, 0.7761, 0.8407, 0.7943, 0.7566, 0.7328, 0.8368, 0.7877, 0.7731, 0.8255, 0.7330]

# 10 qubits, 5 layers, lr 0.01, s=100 CZ, F=70
a3_adam_x8 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0]
a3_adam_y8 = [1.5886, 1.2655, 1.1774, 1.0168, 1.0921, 1.0372, 0.9844, 0.8983, 0.7899, 0.9152, 0.7756, 0.7540, 0.6690, 0.6885, 0.6914, 0.6557, 0.6876, 0.6590, 0.7440, 0.5865, 0.6067, 0.5234, 0.6520, 0.5510, 0.6562, 0.7082, 0.6222, 0.6099, 0.6757, 0.6952, 0.6222, 0.6482, 0.6764, 0.5843, 0.6201, 0.6567, 0.5596, 0.6691, 0.6198, 0.6236, 0.5647, 0.5639, 0.5542, 0.5197, 0.6279, 0.6867, 0.6912, 0.5263]

"""random freeze"""
# 2 layers, 4 qubits, s=100 ,f=70% CZ
rf_x = [0, 3300.0, 4200.0, 5100.0, 6000.0, 6900.0, 7800.0, 8700.0, 9600.0, 10500.0, 11400.0, 12300.0, 13200.0, 14100.0, 15000.0, 15900.0, 16800.0, 17700.0, 18600.0, 19500.0, 20400.0, 21300.0, 22200.0, 23100.0, 24000.0, 24900.0, 25800.0, 26700.0, 27600.0, 28500.0, 29400.0, 30300.0, 31200.0, 32100.0, 33000.0, 33900.0, 34800.0, 35700.0, 36600.0, 37500.0, 38400.0, 39300.0, 40200.0, 41100.0, 42000.0, 42900.0, 43800.0, 44700.0, 45600.0, 46500.0, 47400.0, 48300.0, 49200.0, 50100.0, 51000.0]
rf_y = [2.9918, 2.2601, 1.7688, 1.7076, 1.6638, 1.6096, 1.4534, 1.4410, 1.4260, 1.4092, 1.4320, 1.3667, 1.4137, 1.3405, 1.2942, 1.3709, 1.3497, 1.3176, 1.3707, 1.3075, 1.3027, 1.3685, 1.2394, 1.2165, 1.2941, 1.3134, 1.2381, 1.2850, 1.2704, 1.3568, 1.3434, 1.3071, 1.2671, 1.2033, 1.2741, 1.2505, 1.2341, 1.3109, 1.2357, 1.0949, 1.2283, 1.1587, 1.1836, 1.1798, 1.1718, 1.2624, 1.2316, 1.1018, 1.1867, 1.1934, 1.1761, 1.2832, 1.1840, 1.2291, 1.1244]

# 3 layers, 8 qubits, s=100 ,f=70% CZ
rf_x2 = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0]
rf_y2 = [2.0274, 1.7452, 1.5220, 1.4555, 1.3161, 1.2420, 1.2651, 1.2088, 1.1979, 1.2181, 1.2134, 1.1569, 1.2018, 1.2307, 1.1850, 1.2286, 1.1584, 1.1533, 1.1978, 1.1435, 1.1011, 1.1731, 1.1239, 1.1193, 1.1780, 1.1979, 1.1666, 1.1458, 1.2070, 1.1908, 1.2117, 1.1269, 1.1020, 1.1374]

# 5 layers, 10 qubits, s=100 ,f=70% CZ
rf_x3 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0]
rf_y3 = [1.5886, 1.4421, 1.3469, 1.2654, 1.2995, 1.2529, 1.2615, 1.1964, 1.1540, 1.2275, 1.2308, 1.2117, 1.1321, 1.1717, 1.1461, 1.1743, 1.1318, 1.0946, 1.2097, 1.1330, 1.0777, 1.0880, 1.0408, 1.0689, 1.0773, 1.1641, 1.0814, 1.0467, 1.0162, 1.1040, 1.0843, 1.0879, 1.1011, 1.0219, 0.9993, 1.0555, 1.0155, 1.0578, 1.0042, 1.0131, 0.9987, 0.9740, 0.9250, 0.9127, 0.9480, 0.9561, 1.0027, 0.9148]

"""wsbd layer"""
# 2 layers, 4 qubits, f=50% s=100 CZ
wsbd_l_x = [0, 3300.0, 5000.0, 6700.0, 8400.0, 10100.0, 11800.0, 13500.0, 15200.0, 16900.0, 18600.0, 20300.0, 22000.0, 23700.0, 25400.0, 27100.0, 28800.0, 30500.0, 32200.0, 33900.0, 35600.0, 37300.0, 39000.0, 40700.0, 42400.0, 44100.0, 45800.0, 47500.0, 49200.0, 50900.0, 52600.0, 54300.0, 56000.0]
wsbd_l_y = [2.9918, 2.1335, 1.8626, 1.7390, 1.5466, 1.4294, 1.4965, 1.3617, 1.2426, 1.3076, 1.4474, 1.2659, 1.3343, 1.2252, 1.2626, 1.2459, 1.2918, 1.2888, 1.1459, 1.2793, 1.2141, 1.1502, 1.1431, 1.1725, 1.2361, 1.1367, 1.1792, 1.1518, 1.1946, 1.1199, 1.2719, 1.1523, 1.1389]

# 3 layers, 8 qubits, f=2/3 s=100 CZ
wsbd_l_x2 = [0, 9700.0, 13000.0, 16300.0, 19600.0, 22900.0, 26200.0, 29500.0, 32800.0, 36100.0, 39400.0, 42700.0, 46000.0, 49300.0, 52600.0, 55900.0, 59200.0, 62500.0, 65800.0, 69100.0, 72400.0, 75700.0, 79000.0, 82300.0, 85600.0, 88900.0, 92200.0, 95500.0, 98800.0, 102100.0, 105400.0]
wsbd_l_y2 = [2.0274, 1.7665, 1.4567, 1.3373, 1.2610, 1.2729, 1.2666, 1.2179, 1.2312, 1.2687, 1.2383, 1.1837, 1.2531, 1.1458, 1.1364, 1.2060, 1.1061, 1.1714, 1.1424, 1.1598, 1.1590, 1.1489, 1.0326, 1.1660, 1.0794, 1.0981, 1.1385, 1.1871, 1.1035, 1.0851, 1.0630]

# 5 layers, 10 qubits, f=2/3 s=100 CZ
wsbd_l_x3 = [0, 20100.0, 24200.0, 28300.0, 32400.0, 36500.0, 40600.0, 44700.0, 48800.0, 52900.0, 57000.0, 61100.0, 65200.0, 69300.0, 73400.0, 77500.0, 81600.0, 85700.0, 89800.0, 93900.0, 98000.0, 102100.0, 106200.0, 110300.0, 114400.0, 118500.0, 122600.0, 126700.0, 130800.0, 134900.0, 139000.0, 143100.0, 147200.0, 151300.0, 155400.0, 159500.0, 163600.0, 167700.0, 171800.0, 175900.0, 180000.0, 184100.0, 188200.0, 192300.0, 196400.0, 200500.0, 204600.0, 208700.0, 212800.0, 216900.0, 221000.0, 225100.0, 229200.0, 233300.0, 237400.0, 241500.0, 245600.0, 249700.0, 253800.0, 257900.0, 262000.0, 266100.0, 270200.0, 274300.0, 278400.0, 282500.0, 286600.0, 290700.0, 294800.0, 298900.0, 303000.0]
wsbd_l_y3 = [1.5886, 1.4489, 1.3770, 1.3402, 1.3000, 1.2760, 1.2789, 1.2800, 1.2467, 1.2436, 1.2599, 1.2155, 1.2685, 1.2074, 1.1615, 1.1516, 1.1505, 1.2040, 1.1960, 1.1725, 1.1728, 1.1223, 1.1285, 1.0806, 1.1393, 1.1381, 1.0310, 1.1094, 1.0854, 1.1387, 1.1438, 1.0926, 1.1607, 1.1005, 1.1728, 1.1507, 1.0143, 1.1128, 1.1373, 1.0982, 1.0299, 1.0606, 1.0460, 1.0579, 1.0281, 1.0975, 1.0450, 1.0779, 0.9589, 1.1270, 1.0327, 1.0155, 1.0645, 1.0806, 1.0336, 1.0001, 1.0663, 0.9556, 1.0321, 1.0678, 1.0192, 0.9538, 1.0338, 0.9730, 0.9326, 1.0008, 1.0083, 1.0176, 0.9364, 0.9780, 0.9642]


import numpy as np

def find_convergence_point(x_data, y_data, convergence_loss):
    for i, loss in enumerate(y_data):
        if loss <= convergence_loss:
            return x_data[i]
    return -1



"""MNIST"""
# 4 qubit
# convergence_loss = sgd_y2[len(sgd_y2) - 1]
# sgd_forward_passes = find_convergence_point(sgd_x2, sgd_y2, convergence_loss)
# wsbd_sgd_forward_passes = find_convergence_point(a3_x2, a3_y2, convergence_loss)
# rf_fp = find_convergence_point(rf_x, rf_y, convergence_loss)
# layer_fp = find_convergence_point(wsbd_l_x, wsbd_l_y)
# dbd_fp = find_convergence_point(dbd_x2, dbd_y2)

# 8 qubit
convergence_loss = sgd_y3[len(sgd_y3) - 1]
sgd_forward_passes = find_convergence_point(wsbd_l_x2, wsbd_l_y2, convergence_loss) #sgd_y3[len(sgd_y3)-1] #
wsbd_sgd_forward_passes = find_convergence_point(a3_x5, a3_y5, convergence_loss) #a3_y5[len(a3_y5) -1] #find_convergence_point(a3_x5, a3_y5, convergence_loss)

# 10 qubit
# convergence_loss = sgd_y4[len(sgd_y4) - 1]
# sgd_forward_passes = find_convergence_point(sgd_x4, sgd_y4, convergence_loss) #sgd_y3[len(sgd_y3)-1] #
# wsbd_sgd_forward_passes = find_convergence_point(a3_x6, a3_y6, convergence_loss) #a3_y5[len(a3_y5) -1] #find_convergence_point(a3_x5, a3_y5, convergence_loss)

"""ADAM"""
# 4 qubit
# convergence_loss = sgd_y2[len(sgd_y2) - 1] + 0.03
# sgd_forward_passes = find_convergence_point(sgd_x2, rf_y3, convergence_loss)
# wsbd_sgd_forward_passes = find_convergence_point(a3_x2, a3_y2, convergence_loss)

# 8 qubit
# convergence_loss = b_adam_y7[len(b_adam_y7) - 1]
# sgd_forward_passes = find_convergence_point(b_adam_x7, b_adam_y7, convergence_loss) #sgd_y3[len(sgd_y3)-1] #
# wsbd_sgd_forward_passes = find_convergence_point(a3_adam_x7, a3_adam_y7, convergence_loss) #a3_y5[len(a3_y5) -1] #find_convergence_point(a3_x5, a3_y5, convergence_loss)

# 10 qubit
# convergence_loss = b_adam_y8[len(b_adam_y8) - 1] + 0.1
# sgd_forward_passes = find_convergence_point(b_adam_x8, b_adam_y8, convergence_loss) #sgd_y3[len(sgd_y3)-1] #
# wsbd_sgd_forward_passes = find_convergence_point(a3_adam_x8, a3_adam_y8, convergence_loss) #a3_y5[len(a3_y5) -1] #find_convergence_point(a3_x5, a3_y5, convergence_loss)



# 4. PRINT AND COMPARE THE RESULTS
print(f"🎯 Target Convergence Loss: {convergence_loss}\n")
percentage_diff = ((sgd_forward_passes - wsbd_sgd_forward_passes) / sgd_forward_passes) * 100
print(f'SGD Forward: {sgd_forward_passes}, WSBD Forward: {wsbd_sgd_forward_passes}, Difference: {sgd_forward_passes-wsbd_sgd_forward_passes}')
if percentage_diff > 0:
    print(f"📈 WSBD-SGD is {percentage_diff:.1f}% faster than SGD")
elif percentage_diff < 0:
    print(f"\n📉 WSBD-SGD is {abs(percentage_diff):.1f}% slower than SGD")

# print(no_r_y3[len(no_r_y3)-1])
# print(a3_y6[len(a3_y6)-1])

