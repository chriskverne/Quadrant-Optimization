import matplotlib.pyplot as plt


"""SUM (WSBD)"""
# 3-layers, 8-qubits, s=100, lr=0.01 CZ
wsbd_x = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0, 105400.0, 108300.0, 111200.0, 114100.0, 117000.0, 119900.0, 122800.0]
wsbd_y = [2.0274, 1.7452, 1.4768, 1.3541, 1.2673, 1.1984, 1.1971, 1.1813, 1.1278, 1.1644, 1.1252, 1.0963, 1.1312, 1.1838, 1.0869, 1.1238, 1.0916, 1.1116, 1.0413, 1.0078, 1.0536, 0.9699, 1.1150, 0.9391, 1.0621, 1.0303, 0.9673, 0.9566, 0.9866, 1.0029, 0.9787, 0.9345, 0.9225, 0.9106, 0.9664, 0.9959, 0.9734, 0.8487, 0.9513, 0.9973, 0.9527]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ F=70
wsbd_x2 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0, 306800.0, 312900.0, 319000.0, 325100.0, 331200.0, 337300.0, 343400.0, 349500.0, 355600.0, 361700.0, 367800.0, 373900.0, 380000.0, 386100.0, 392200.0, 398300.0, 404400.0, 410500.0, 416600.0, 422700.0, 428800.0, 434900.0, 441000.0, 447100.0, 453200.0, 459300.0, 465400.0, 471500.0, 477600.0, 483700.0, 489800.0, 495900.0, 502000.0]
wsbd_y2 = [1.5886, 1.4421, 1.3357, 1.2364, 1.2580, 1.1770, 1.1803, 1.1093, 1.0098, 1.1549, 1.1218, 1.1054, 1.0137, 1.0733, 1.0104, 1.0185, 1.0357, 0.9662, 1.0598, 1.0148, 0.9351, 0.9177, 0.9090, 0.8774, 0.9460, 0.9458, 0.8510, 0.8223, 0.8355, 0.9281, 0.8412, 0.8293, 0.8598, 0.7832, 0.7717, 0.8494, 0.8098, 0.8084, 0.7626, 0.8828, 0.8294, 0.7344, 0.6827, 0.6268, 0.7623, 0.7732, 0.7984, 0.6716, 0.7068, 0.7508, 0.7150, 0.7804, 0.8032, 0.7302, 0.7423, 0.7701, 0.7397, 0.7359, 0.7624, 0.7613, 0.7649, 0.8106, 0.7764, 0.7720, 0.7728, 0.7193, 0.7711, 0.8122, 0.7613, 0.7366, 0.8004, 0.7372, 0.7261, 0.7471, 0.8087, 0.7228, 0.6553, 0.7289, 0.7484, 0.8529, 0.7264]

"""EMA"""
# 3-layers, 8-qubits, s=100, lr=0.01 CZ B=90%
ema_x = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0]
ema_y = [2.0274, 1.7452, 1.4760, 1.3495, 1.2592, 1.1861, 1.1936, 1.1775, 1.1228, 1.1641, 1.1253, 1.0962, 1.1254, 1.1881, 1.1067, 1.1337, 1.1156, 1.1067, 1.0679, 1.0171, 1.0567, 0.9902, 1.1021, 0.9619, 1.0755, 1.0880, 1.0123, 0.9858, 1.0239, 1.0465, 1.0517, 0.9871, 0.9782, 0.9726]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ B=90%
ema_x2 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0, 306800.0, 312900.0, 319000.0, 325100.0, 331200.0, 337300.0, 343400.0, 349500.0, 355600.0, 361700.0, 367800.0, 373900.0, 380000.0, 386100.0, 392200.0, 398300.0, 404400.0, 410500.0, 416600.0, 422700.0, 428800.0, 434900.0, 441000.0, 447100.0, 453200.0, 459300.0, 465400.0, 471500.0, 477600.0, 483700.0, 489800.0, 495900.0, 502000.0]
ema_y2 = [1.5886, 1.4421, 1.3353, 1.2269, 1.2577, 1.1653, 1.1808, 1.1077, 1.0240, 1.1770, 1.1567, 1.1263, 1.0415, 1.0956, 1.0447, 1.0659, 1.0339, 0.9747, 1.0902, 1.0510, 0.9644, 0.9464, 0.9411, 0.9212, 0.9857, 1.0074, 0.9212, 0.9005, 0.9328, 0.9442, 0.9164, 0.9176, 0.9540, 0.8808, 0.8610, 0.8946, 0.8633, 0.8728, 0.8406, 0.9142, 0.8858, 0.8595, 0.7859, 0.7695, 0.8432, 0.7898, 0.8466, 0.7963, 0.7897, 0.8255, 0.7698, 0.8369, 0.8733, 0.8266, 0.8316, 0.8231, 0.8201, 0.8237, 0.8721, 0.8239, 0.8331, 0.8953, 0.8422, 0.8602, 0.8320, 0.7702, 0.8171, 0.8551, 0.8182, 0.8203, 0.8625, 0.7966, 0.7513, 0.7752, 0.8638, 0.7476, 0.7304, 0.7570, 0.8038, 0.9005, 0.7701]

"""variance"""
# 3-layers, 8-qubits, s=100, lr=0.01 CZ window=100
var_x = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0, 105400.0]
var_y = [2.0274, 1.7452, 1.4761, 1.3502, 1.2590, 1.1867, 1.1947, 1.1811, 1.1274, 1.1682, 1.1330, 1.1013, 1.1352, 1.1953, 1.0974, 1.1358, 1.1007, 1.1021, 1.0586, 1.0005, 1.0377, 0.9671, 1.0762, 0.9190, 1.0397, 1.0298, 0.9665, 0.9648, 1.0023, 1.0196, 1.0009, 0.9440, 0.9299, 0.9521, 0.9915]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ window=100
var_x2 = [20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0, 306800.0, 312900.0, 319000.0, 325100.0, 331200.0, 337300.0, 343400.0, 349500.0, 355600.0, 361700.0, 367800.0, 373900.0, 380000.0, 386100.0, 392200.0, 398300.0, 404400.0, 410500.0, 416600.0, 422700.0, 428800.0, 434900.0, 441000.0, 447100.0, 453200.0, 459300.0, 465400.0, 471500.0, 477600.0, 483700.0, 489800.0, 495900.0, 502000.0]
var_y2 = [1.4421, 1.3352, 1.2264, 1.2508, 1.1616, 1.1657, 1.0912, 0.9931, 1.1431, 1.1343, 1.1176, 1.0355, 1.0742, 1.0351, 1.0395, 1.0524, 0.9759, 1.0788, 1.0504, 0.9588, 0.9548, 0.9466, 0.9575, 0.9654, 1.0431, 0.9597, 0.9426, 0.9072, 1.0113, 0.9412, 0.9292, 0.9793, 0.8847, 0.8923, 0.9465, 0.8653, 0.9806, 0.8855, 0.8949, 0.8246, 0.8682, 0.8486, 0.7499, 0.8625, 0.8691, 0.8878, 0.7426, 0.7977, 0.8560, 0.7819, 0.8570, 0.7812, 0.7980, 0.7609, 0.7285, 0.7681, 0.7927, 0.7471, 0.7587, 0.7404, 0.7942, 0.7625, 0.7427, 0.7706, 0.6867, 0.6956, 0.7228, 0.6592, 0.7199, 0.7355, 0.6719, 0.6782, 0.6548, 0.7164, 0.6430, 0.6073, 0.6330, 0.6390, 0.7750, 0.6531]

"""Fisher"""
# 3-layers, 8-qubits, s=100, lr=0.01 CZ
fish_x = [0, 19300.0, 31800.0, 44300.0, 56800.0, 69300.0, 81800.0, 94300.0, 106800.0]
fish_y = [2.0274, 1.7452, 1.4771, 1.3514, 1.2598, 1.1896, 1.1989, 1.1854, 1.1329]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ
fish_x2 = [0, 40100.0, 66200.0, 92300.0, 118400.0, 144500.0, 170600.0, 196700.0, 222800.0, 248900.0, 275000.0, 301100.0, 327200.0, 353300.0, 379400.0, 405500.0, 431600.0, 457700.0, 483800.0, 509900.0]
fish_y2 = [1.5886, 1.4421, 1.3341, 1.2247, 1.2514, 1.1592, 1.1707, 1.0900, 0.9921, 1.1554, 1.1362, 1.1202, 1.0301, 1.0728, 1.0298, 1.0279, 1.0378, 0.9563, 1.0581, 1.0247]

"""Recent"""
# 3-layers, 8-qubits, s=100, lr=0.01 CZ
recent_x = [0, 9700.0, 12600.0, 15500.0, 18400.0, 21300.0, 24200.0, 27100.0, 30000.0, 32900.0, 35800.0, 38700.0, 41600.0, 44500.0, 47400.0, 50300.0, 53200.0, 56100.0, 59000.0, 61900.0, 64800.0, 67700.0, 70600.0, 73500.0, 76400.0, 79300.0, 82200.0, 85100.0, 88000.0, 90900.0, 93800.0, 96700.0, 99600.0, 102500.0]
recent_y = [2.0274, 1.7452, 1.4794, 1.3567, 1.2566, 1.1847, 1.1955, 1.1752, 1.1252, 1.1608, 1.1278, 1.0908, 1.1247, 1.1826, 1.0843, 1.1171, 1.0918, 1.0924, 1.0341, 0.9862, 1.0335, 0.9459, 1.0780, 0.9019, 1.0328, 1.0108, 0.9573, 0.9603, 1.0082, 1.0126, 0.9902, 0.9490, 0.9471, 0.9558]

# 5-layers, 10-qubits, s=100, lr=0.01 CZ
recent_x2 = [0, 20100.0, 26200.0, 32300.0, 38400.0, 44500.0, 50600.0, 56700.0, 62800.0, 68900.0, 75000.0, 81100.0, 87200.0, 93300.0, 99400.0, 105500.0, 111600.0, 117700.0, 123800.0, 129900.0, 136000.0, 142100.0, 148200.0, 154300.0, 160400.0, 166500.0, 172600.0, 178700.0, 184800.0, 190900.0, 197000.0, 203100.0, 209200.0, 215300.0, 221400.0, 227500.0, 233600.0, 239700.0, 245800.0, 251900.0, 258000.0, 264100.0, 270200.0, 276300.0, 282400.0, 288500.0, 294600.0, 300700.0, 306800.0, 312900.0, 319000.0, 325100.0, 331200.0, 337300.0, 343400.0, 349500.0, 355600.0, 361700.0, 367800.0, 373900.0, 380000.0, 386100.0, 392200.0, 398300.0, 404400.0, 410500.0, 416600.0, 422700.0, 428800.0, 434900.0, 441000.0, 447100.0, 453200.0, 459300.0, 465400.0, 471500.0, 477600.0, 483700.0, 489800.0, 495900.0, 502000.0]
recent_y2 = [1.5886, 1.4421, 1.3350, 1.2330, 1.2552, 1.1728, 1.1955, 1.0989, 1.0296, 1.1489, 1.1360, 1.1224, 1.0460, 1.0993, 1.0479, 1.0804, 1.0776, 0.9966, 1.1104, 1.0956, 1.0048, 0.9954, 0.9820, 1.0081, 1.0083, 1.1013, 1.0135, 0.9912, 0.9602, 1.0641, 0.9853, 0.9976, 1.0214, 0.9410, 0.9182, 0.9499, 0.9383, 1.0211, 0.9345, 1.0158, 0.8962, 0.8748, 0.8372, 0.7673, 0.8847, 0.8722, 0.8868, 0.7680, 0.7838, 0.8514, 0.7938, 0.8327, 0.8457, 0.8191, 0.8558, 0.7796, 0.7963, 0.8049, 0.8054, 0.8128, 0.8228, 0.8418, 0.8628, 0.8581, 0.8344, 0.7694, 0.8045, 0.8390, 0.8090, 0.8186, 0.8143, 0.7507, 0.8126, 0.7476, 0.8049, 0.7730, 0.7036, 0.7831, 0.7904, 0.9107, 0.7917]


plt.figure(figsize=(10, 6))

# 8 qubit 3 layer
# plt.plot(wsbd_x, wsbd_y, label='Sum')
# plt.plot(ema_x, ema_y, label='EMA')
# plt.plot(var_x, var_y, label='Variance')
# plt.plot(fish_x, fish_y, label='Fisher Matrix')
# plt.plot(recent_x, recent_y, label='Recent Gradient')
# plt.xlim(0, 100000)

# 10 qubit 5 layer
plt.plot(wsbd_x2, wsbd_y2, label='Sum', linewidth=3, marker='D', markersize=8)
plt.plot(recent_x2, recent_y2, label='Recent', linewidth=3)
plt.plot(var_x2, var_y2, label='Variance', linewidth=3)
plt.plot(ema_x2, ema_y2, label='EMA', linewidth=3)
plt.plot(fish_x2, fish_y2, label='Fisher Matrix', linewidth=3)
plt.xlim(0, 300000)

plt.xlabel('Number of Forward Passes', fontsize='13')
plt.ylabel('Cross Entropy Loss', fontsize='13')
plt.tick_params(axis='both', which='major', labelsize=12)
plt.legend(loc='upper right', framealpha=1.0, facecolor='white', edgecolor='black', fontsize=14)
plt.minorticks_on()
plt.grid(True, which='major', alpha=0.5, linestyle='-', linewidth=0.8, color='gray')
plt.grid(True, which='minor', alpha=0.3, linestyle=':', linewidth=0.5, color='gray')
plt.gca().set_facecolor("#CDD6D9FF")
plt.xlim(0,300000)
plt.show()
plt.savefig('./figs/ip_metrics.png')