import matplotlib.pyplot as plt

"""baseline"""
# Create arrays for forward passes and loss values
x = [3650, 7300, 10950, 14600, 18250, 21900, 25550, 29200, 32850, 36500, 40150, 43800, 47450, 51100, 54750]
y = [0.6961, 0.6692, 0.6859, 0.6561, 0.6631, 0.6527, 0.6443, 0.6554, 0.6373, 0.6219, 0.6168, 0.6015, 0.6127, 0.6134, 0.5996]


"""frobernius_layer_freezing"""
# 3-layer, 6-qubits
x2 = [3650, 7300, 10950, 14600, 18250, 21900, 24350, 26800, 29250, 31700, 34150, 36600, 39050, 41500, 42750, 44000, 45250, 46500, 47750, 49000, 50250, 51500, 52750]
y2 = [0.6961, 0.6692, 0.6859, 0.6561, 0.6631, 0.6527, 0.6444, 0.657, 0.6392, 0.624, 0.6208, 0.606, 0.6172, 0.62, 0.6081, 0.6194, 0.6071, 0.6124, 0.6023, 0.5984, 0.5914, 0.5927, 0.5938]

"""frobernius_layer_freezing_all"""
# 3-layer, 6-qubits
x3 = [3650, 4900, 6150, 7400, 8650, 12300, 13550, 14800, 16050, 17300, 20950, 22200, 23450, 24700, 25950, 29600, 30850, 32100, 33350, 34600, 38250, 39500, 40750, 42000, 43250, 46900, 48150, 49400, 50650, 51900]
y3 = [0.6961, 0.671, 0.6926, 0.6626, 0.6761, 0.6684, 0.6595, 0.6742, 0.6592, 0.6455, 0.6415, 0.6294, 0.6437, 0.646, 0.641, 0.6476, 0.6263, 0.6348, 0.621, 0.6213, 0.6113, 0.6055, 0.6108, 0.6107, 0.5985, 0.5938, 0.5897, 0.5941, 0.5777, 0.5978]

"""ema_and_unfreezing"""
# 3-layer, 6-qubits
x4 = [3650, 4700, 5750, 6800, 7850, 8900, 9950, 11000, 12050, 13100, 14150, 15200, 16250, 17300, 18350, 19400, 20450, 21500, 22550, 23600, 24650, 25700, 26750, 27800, 28850, 29900, 30950, 32000, 33050, 34100, 35150, 36200, 37250, 38300, 39350, 40400, 41450, 42500, 43550, 44600]
y4 = [0.6961, 0.6704, 0.6902, 0.6593, 0.67, 0.6617, 0.6551, 0.6717, 0.6553, 0.6412, 0.6379, 0.6254, 0.6447, 0.6481, 0.6383, 0.6562, 0.6276, 0.6323, 0.621, 0.6123, 0.6094, 0.6047, 0.6152, 0.6213, 0.6025, 0.6065, 0.6012, 0.6112, 0.5896, 0.6179, 0.591, 0.592, 0.5973, 0.6026, 0.5853, 0.5969, 0.6, 0.5924, 0.5906, 0.5811]

"""app1"""
# 3-layer, 6-qubits
x5 = [3650, 4400, 5150, 5900, 6650, 7400, 8150, 8900, 9650, 10400, 11150, 11900, 12650, 13400, 14150, 14900, 15650, 16400, 17150, 17900, 18650, 19400, 20150, 20900, 21650, 22400, 23150, 23900, 24650, 25400, 26150, 26900, 27650, 28400, 29150, 29900, 30650, 31400, 32150, 32900]
y5 = [0.6961, 0.6706, 0.6902, 0.6601, 0.6706, 0.6632, 0.6540, 0.6704, 0.6523, 0.6378, 0.6358, 0.6233, 0.6418, 0.6444, 0.6360, 0.6567, 0.6268, 0.6383, 0.6215, 0.6138, 0.6102, 0.6039, 0.6172, 0.6241, 0.6090, 0.6139, 0.6075, 0.6164, 0.5972, 0.6246, 0.6016, 0.5989, 0.6052, 0.6137, 0.5957, 0.6092, 0.6156, 0.6045, 0.6032, 0.5986]
# 5-layers, 10-qubits
x6 = [10050, 12000, 13950, 15900, 17850, 19800, 21750, 23700, 25650, 27600, 29550, 31500, 33450, 35400, 37350, 39300, 41250, 43200, 45150, 47100, 49050, 51000, 52950, 54900, 56850, 58800, 60750, 62700, 64650, 66600, 68550, 70500, 72450, 74400, 76350, 78300, 80250, 82200, 84150, 86100, 88050, 90000, 91950, 93900, 95850, 97800, 99750, 101700, 103650, 105600, 107550, 109500, 111450, 113400, 115350, 117300, 119250, 121200, 123150, 125100, 127050, 129000, 130950, 132900, 134850, 136800, 138750, 140700, 142650, 144600, 146550, 148500, 150450, 152400, 154350, 156300, 158250, 160200, 162150, 164100]
y6 = [1.3851, 1.3770, 1.3726, 1.3720, 1.3663, 1.3668, 1.3661, 1.3587, 1.3675, 1.3592, 1.3533, 1.3588, 1.3408, 1.3581, 1.3759, 1.3474, 1.3475, 1.3511, 1.3323, 1.3509, 1.3443, 1.3486, 1.3364, 1.3382, 1.3420, 1.3383, 1.3322, 1.3466, 1.3323, 1.3239, 1.3418, 1.3356, 1.3228, 1.3270, 1.3340, 1.3440, 1.3176, 1.3027, 1.3406, 1.3065, 1.3143, 1.3161, 1.3294, 1.3339, 1.3238, 1.3061, 1.3184, 1.3327, 1.2996, 1.3099, 1.3128, 1.3199, 1.3143, 1.3045, 1.3212, 1.3146, 1.3149, 1.2951, 1.2769, 1.2929, 1.3029, 1.3055, 1.3038, 1.2999, 1.2892, 1.2765, 1.2762, 1.2824, 1.2590, 1.2789, 1.2758, 1.2579, 1.2578, 1.2429, 1.2747, 1.2736, 1.2574, 1.2968, 1.2483, 1.2422]

"""Plots"""
# plt.figure(figsize=(10, 6))
# plt.plot(x, y, label='Baseline',  linestyle='-')
# plt.plot(x2, y2, label='Frobenius Layer Freezing', linestyle='--')
# plt.plot(x3, y3, label='Frobenius Layer Freezing All', linestyle='-')
# plt.plot(x4, y4, label='EMA and Unfreezing', linestyle='-')
# plt.plot(x5, y5, label='App1', linestyle='-')
# plt.plot(x6, y6, label='App1', linestyle='-')




plt.title('Loss Decrease Over Forward Passes')
plt.xlabel('Number of Forward Passes')
plt.ylabel('Loss')

plt.legend()
plt.grid(True)
plt.show()