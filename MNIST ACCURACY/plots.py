# 4 qubits 2 layers
adam_4q_2l = [(0, 0.25), (1650, 0.3658), (3300, 0.4492), (4950, 0.4984), (6600, 0.4896), (8250, 0.5008), (9900, 0.493), (11550, 0.4932), (13200, 0.5164), (14850, 0.554), (16500, 0.5914), (18150, 0.597), (19800, 0.6422), (21450, 0.6418), (23100, 0.5744), (24750, 0.6582), (26400, 0.6724), (28050, 0.6438), (29700, 0.6262), (31350, 0.5316), (33000, 0.6588), (34650, 0.6754), (36300, 0.6744), (37950, 0.6854), (39600, 0.699), (41250, 0.7016), (42900, 0.6628)]
sgd_4q_2l =  [(0, 0.25),(1650, 0.3322), (3300, 0.3692), (4950, 0.3894), (6600, 0.4058), (8250, 0.4214), (9900, 0.4294), (11550, 0.5256), (13200, 0.5026), (14850, 0.538), (16500, 0.5246), (18150, 0.5214), (19800, 0.4964), (21450, 0.532), (23100, 0.506), (24750, 0.556), (26400, 0.5174), (28050, 0.5214), (29700, 0.4886), (31350, 0.4864), (33000, 0.4912), (34650, 0.4962), (36300, 0.4924), (37950, 0.5056), (39600, 0.581), (41250, 0.5292), (42900, 0.5132), (44550, 0.571)]
wsbd_adam_4q_2l = [(0, 0.25),(3300.0, 0.4492), (4200.0, 0.4296), (5100.0, 0.4742), (6000.0, 0.5162), (6900.0, 0.392), (7800.0, 0.4394), (8700.0, 0.5048), (9600.0, 0.538), (10500.0, 0.5354), (11400.0, 0.5228), (12300.0, 0.6086), (13200.0, 0.6772), (14100.0, 0.6874), (15000.0, 0.6528), (15900.0, 0.6732), (16800.0, 0.5228), (17700.0, 0.6636), (18600.0, 0.6556), (19500.0, 0.6818), (20400.0, 0.6866), (21300.0, 0.6758), (22200.0, 0.7044), (23100.0, 0.6782), (24000.0, 0.6972), (24900.0, 0.6942), (25800.0, 0.687)]
wsbd_sgd_4q_2l = [(0, 0.25),(3300.0, 0.3692), (4200.0, 0.4114), (5100.0, 0.4184), (6000.0, 0.4382), (6900.0, 0.5618), (7800.0, 0.5988), (8700.0, 0.5894), (9600.0, 0.588), (10500.0, 0.5532), (11400.0, 0.528), (12300.0, 0.5142), (13200.0, 0.583), (14100.0, 0.5408), (15000.0, 0.557), (15900.0, 0.5366), (16800.0, 0.5132), (17700.0, 0.512), (18600.0, 0.5026), (19500.0, 0.5036), (20400.0, 0.5118), (21300.0, 0.5098), (22200.0, 0.5092), (23100.0, 0.561), (24000.0, 0.5522), (24900.0, 0.5458), (25800.0, 0.5508)]

# 8 qubits 3 layers
wsbd_adam_8q_3l = [(0, 0.25),(9700.0, 0.4174), (12600.0, 0.4818), (15500.0, 0.502), (18400.0, 0.5896), (21300.0, 0.512), (24200.0, 0.5374), (27100.0, 0.5698), (30000.0, 0.5872), (32900.0, 0.6126), (35800.0, 0.5986), (38700.0, 0.6238), (41600.0, 0.6004), (44500.0, 0.6312), (47400.0, 0.608), (50300.0, 0.6554), (53200.0, 0.6126), (56100.0, 0.599), (59000.0, 0.6108), (61900.0, 0.599), (64800.0, 0.5868), (67700.0, 0.5986), (70600.0, 0.6208), (73500.0, 0.6144), (76400.0, 0.5918), (79300.0, 0.646), (82200.0, 0.6314), (85100.0, 0.6738), (88000.0, 0.6868), (90900.0, 0.6776), (93800.0, 0.6498), (96700.0, 0.6342), (99600.0, 0.6592), (102500.0, 0.6542), (105400.0, 0.6544), (108300.0, 0.6556), (111200.0, 0.6588), (114100.0, 0.66), (117000.0, 0.6504), (119900.0, 0.651), (122800.0, 0.6492), (125700.0, 0.6576), (128600.0, 0.6602), (131500.0, 0.6518), (134400.0, 0.6458), (137300.0, 0.654), (140200.0, 0.6616), (143100.0, 0.6464), (146000.0, 0.6454), (148900.0, 0.661), (151800.0, 0.6556)]
#wsbd_adam_8q_3l = [(9700.0, 0.5352), (12600.0, 0.5244), (15500.0, 0.512), (18400.0, 0.5038), (21300.0, 0.4988), (24200.0, 0.4898), (27100.0, 0.5096), (30000.0, 0.5438), (32900.0, 0.6452), (35800.0, 0.6524), (38700.0, 0.6054), (41600.0, 0.6032), (44500.0, 0.6912), (47400.0, 0.6376), (50300.0, 0.6348), (53200.0, 0.5952), (56100.0, 0.6276), (59000.0, 0.6306), (61900.0, 0.6498), (64800.0, 0.6414), (67700.0, 0.6106), (70600.0, 0.6352), (73500.0, 0.6084), (76400.0, 0.6284), (79300.0, 0.608), (82200.0, 0.633), (85100.0, 0.6304), (88000.0, 0.654), (90900.0, 0.6292), (93800.0, 0.6578), (96700.0, 0.6658), (99600.0, 0.6478), (102500.0, 0.628), (105400.0, 0.635), (108300.0, 0.611), (111200.0, 0.6248), (114100.0, 0.642), (117000.0, 0.652), (119900.0, 0.6246), (122800.0, 0.6378), (125700.0, 0.6316), (128600.0, 0.625), (131500.0, 0.6082), (134400.0, 0.6222), (137300.0, 0.6258), (140200.0, 0.643), (143100.0, 0.6384), (146000.0, 0.6082), (148900.0, 0.6056), (151800.0, 0.581)]
adam_8q_3l = [(0, 0.25),(4850, 0.3872), (9700, 0.4174), (14550, 0.5518), (19400, 0.6058), (24250, 0.5868), (29100, 0.5874), (33950, 0.481), (38800, 0.5502), (43650, 0.5394), (48500, 0.525), (53350, 0.5414), (58200, 0.5404), (63050, 0.5358), (67900, 0.5612), (72750, 0.552), (77600, 0.5482), (82450, 0.5738), (87300, 0.6044), (92150, 0.6224), (97000, 0.5838), (101850, 0.5904), (106700, 0.636), (111550, 0.6114), (116400, 0.6014), (121250, 0.6382), (126100, 0.7046), (130950, 0.6286), (135800, 0.6484), (140650, 0.6468), (145500, 0.671)]
adam_8q_3l = [(0, 0.25),(4850, 0.3872), (9700, 0.4174), (14550, 0.5518), (19400, 0.6058), (24250, 0.5868), (29100, 0.5874), (33950, 0.481), (38800, 0.5502), (43650, 0.5394), (48500, 0.525), (53350, 0.5414), (58200, 0.5404), (63050, 0.5358), (67900, 0.5612), (72750, 0.552), (77600, 0.5482), (82450, 0.5738), (87300, 0.6044), (92150, 0.6224), (97000, 0.5838), (101850, 0.5904), (106700, 0.636), (111550, 0.6114), (116400, 0.6014), (121250, 0.6382), (126100, 0.6846), (130950, 0.6286), (135800, 0.6484), (140650, 0.6468), (145500, 0.671)]
sgd_8q_3l = [(0, 0.25),(4850, 0.3106), (9700, 0.3194), (14550, 0.3284), (19400, 0.3312), (24250, 0.3358), (29100, 0.341), (33950, 0.3404), (38800, 0.3424), (43650, 0.3448), (48500, 0.3466), (53350, 0.35), (58200, 0.357), (63050, 0.3826), (67900, 0.3964), (72750, 0.437), (77600, 0.4436), (82450, 0.4652), (87300, 0.4714), (92150, 0.4698), (97000, 0.4824), (101850, 0.4858), (106700, 0.4902), (111550, 0.491), (116400, 0.4902), (121250, 0.4902), (126100, 0.4892), (130950, 0.4888), (135800, 0.4884), (140650, 0.4926), (145500, 0.4912), (150350, 0.4902), (155200, 0.4906), (160050, 0.488), (164900, 0.4894), (169750, 0.49), (174600, 0.4888), (179450, 0.49), (184300, 0.4904), (189150, 0.4936), (194000, 0.4934), (198850, 0.4932), (203700, 0.4938), (208550, 0.4934), (213400, 0.4946), (218250, 0.4942), (223100, 0.4964), (227950, 0.494), (232800, 0.4912), (237650, 0.4932), (242500, 0.4952)]
wsbd_sgd_8q_3l = [(0, 0.25),(9700.0, 0.3194), (12600.0, 0.3294), (15500.0, 0.3344), (18400.0, 0.3382), (21300.0, 0.3378), (24200.0, 0.3382), (27100.0, 0.3408), (30000.0, 0.3424), (32900.0, 0.3434), (35800.0, 0.3492), (38700.0, 0.3732), (41600.0, 0.4258), (44500.0, 0.4452), (47400.0, 0.4588), (50300.0, 0.4706), (53200.0, 0.4748), (56100.0, 0.4774), (59000.0, 0.4772), (61900.0, 0.4802), (64800.0, 0.4786), (67700.0, 0.4752), (70600.0, 0.4772), (73500.0, 0.476), (76400.0, 0.4758), (79300.0, 0.4766), (82200.0, 0.4794), (85100.0, 0.4782), (88000.0, 0.477), (90900.0, 0.476), (93800.0, 0.4774), (96700.0, 0.4802), (99600.0, 0.4814), (102500.0, 0.4852), (105400.0, 0.487), (108300.0, 0.49), (111200.0, 0.4922), (114100.0, 0.4924), (117000.0, 0.4918), (119900.0, 0.4922), (122800.0, 0.4924), (125700.0, 0.4916), (128600.0, 0.495), (131500.0, 0.4978), (134400.0, 0.4984), (137300.0, 0.4988), (140200.0, 0.4988), (143100.0, 0.497), (146000.0, 0.494), (148900.0, 0.4944), (151800.0, 0.4948)]

# 10 qubits 5 layers
adam_10q_5l = [(0, 0.25),(10050, 0.5482), (20100, 0.6388), (30150, 0.62), (40200, 0.66), (50250, 0.6322), (60300, 0.6264), (70350, 0.5738), (80400, 0.6738), (90450, 0.6862), (100500, 0.702), (110550, 0.7296), (120600, 0.7372), (130650, 0.6936)]
#adam_10q_5l=[(10050, 0.5494), (20100, 0.5848), (30150, 0.579), (40200, 0.6028), (50250, 0.6394), (60300, 0.5938), (70350, 0.6156), (80400, 0.5486), (90450, 0.56), (100500, 0.559), (110550, 0.5616), (120600, 0.5808), (130650, 0.5846), (140700, 0.6022), (150750, 0.6128), (160800, 0.6262), (170850, 0.614), (180900, 0.6134), (190950, 0.6248), (201000, 0.6194), (211050, 0.6102), (221100, 0.615), (231150, 0.6136), (241200, 0.6234), (251250, 0.6444), (261300, 0.6486), (271350, 0.6298), (281400, 0.6348), (291450, 0.6332), (301500, 0.6718), (311550, 0.6586), (321600, 0.6528), (331650, 0.6798), (341700, 0.6866), (351750, 0.7268), (361800, 0.6958), (371850, 0.738), (381900, 0.7186), (391950, 0.7356), (402000, 0.7192), (412050, 0.7388), (422100, 0.6676), (432150, 0.7336), (442200, 0.7626), (452250, 0.7632), (462300, 0.7606), (472350, 0.7382), (482400, 0.7328), (492450, 0.7018), (502500, 0.7726)]
wsbd_adam_10q_5l = [(0, 0.25),(20100.0, 0.6388), (26200.0, 0.617), (32300.0, 0.6108), (38400.0, 0.5896), (44500.0, 0.63), (50600.0, 0.6652), (56700.0, 0.671), (62800.0, 0.6594), (68900.0, 0.6702), (75000.0, 0.6628), (81100.0, 0.675), (87200.0, 0.6616), (93300.0, 0.712)]
wsbd_adam_10q_5l = [(0, 0.25),(20100.0, 0.6388), (26200.0, 0.645), (32300.0, 0.65), (38400.0, 0.6366), (44500.0, 0.6508), (50600.0, 0.664), (56700.0, 0.716), (62800.0, 0.7166), (68900.0, 0.7366), (75000.0, 0.7336), (81100.0, 0.7088), (87200.0, 0.7034), (93300.0, 0.7234), (99400.0, 0.7424), (105500.0, 0.7354), (111600.0, 0.7312), (117700.0, 0.7076), (123800.0, 0.716), (129900.0, 0.7062), (136000.0, 0.6962)]
#wsbd_adam_10q_5l = [(20100.0, 0.5848), (26200.0, 0.5914), (32300.0, 0.6146), (38400.0, 0.6492), (44500.0, 0.64), (50600.0, 0.6846), (56700.0, 0.6654), (62800.0, 0.6718), (68900.0, 0.6506), (75000.0, 0.6716), (81100.0, 0.6912), (87200.0, 0.6804), (93300.0, 0.6338), (99400.0, 0.6692), (105500.0, 0.6886), (111600.0, 0.688), (117700.0, 0.697), (123800.0, 0.6816), (129900.0, 0.6948), (136000.0, 0.6586), (142100.0, 0.6192), (148200.0, 0.6744), (154300.0, 0.654), (160400.0, 0.6354), (166500.0, 0.6496), (172600.0, 0.6414), (178700.0, 0.6538), (184800.0, 0.6642), (190900.0, 0.6814), (197000.0, 0.6726), (203100.0, 0.7556), (209200.0, 0.7074), (215300.0, 0.726), (221400.0, 0.6958), (227500.0, 0.7512), (233600.0, 0.753), (239700.0, 0.7562), (245800.0, 0.7664), (251900.0, 0.7244), (258000.0, 0.7468), (264100.0, 0.7392), (270200.0, 0.7766), (276300.0, 0.7774), (282400.0, 0.7826), (288500.0, 0.7806), (294600.0, 0.767), (300700.0, 0.7694), (306800.0, 0.6748), (312900.0, 0.729), (319000.0, 0.7266)]
wsbd_sgd_10q_5l = [(0, 0.25),(20100.0, 0.2904), (26200.0, 0.3054), (32300.0, 0.3262), (38400.0, 0.35), (44500.0, 0.3718), (50600.0, 0.3948), (56700.0, 0.4296), (62800.0, 0.4592), (68900.0, 0.4716), (75000.0, 0.4888), (81100.0, 0.5032), (87200.0, 0.5172), (93300.0, 0.5238)]
wsbd_sgd_10q_5l = [(0, 0.25),(20100.0, 0.2904), (26200.0, 0.3062), (32300.0, 0.3296), (38400.0, 0.351), (44500.0, 0.3714), (50600.0, 0.3932), (56700.0, 0.4252), (62800.0, 0.4524), (68900.0, 0.4714), (75000.0, 0.4744), (81100.0, 0.4848), (87200.0, 0.505), (93300.0, 0.518), (99400.0, 0.5302), (105500.0, 0.5384), (111600.0, 0.5412), (117700.0, 0.5472), (123800.0, 0.5518), (129900.0, 0.5512), (136000.0, 0.555), (142100.0, 0.5594), (148200.0, 0.5632), (154300.0, 0.5652), (160400.0, 0.566), (166500.0, 0.5648), (172600.0, 0.5676), (178700.0, 0.5698), (184800.0, 0.5754)]
sgd_10q_5l = [(0, 0.25),(10050, 0.2796), (20100, 0.2904), (30150, 0.3094), (40200, 0.3208), (50250, 0.345), (60300, 0.363), (70350, 0.3842), (80400, 0.4086), (90450, 0.4398), (100500, 0.4622), (110550, 0.4798), (120600, 0.4938), (130650, 0.4974)]
sgd_10q_5l = [(0, 0.25),(10050, 0.2796), (20100, 0.2904), (30150, 0.3094), (40200, 0.3208), (50250, 0.345), (60300, 0.363), (70350, 0.3842), (80400, 0.4086), (90450, 0.4398), (100500, 0.4622), (110550, 0.4798), (120600, 0.4938), (130650, 0.4974), (140700, 0.5116), (150750, 0.5162), (160800, 0.52), (170850, 0.5266), (180900, 0.5366), (190950, 0.543), (201000, 0.5476), (211050, 0.551), (221100, 0.5566), (231150, 0.557), (241200, 0.553), (251250, 0.5562), (261300, 0.5656), (271350, 0.5624), (281400, 0.5624), (291450, 0.5616)]

import matplotlib.pyplot as plt
from matplotlib.ticker import MaxNLocator

fourQ_data = [adam_4q_2l, sgd_4q_2l, wsbd_adam_4q_2l, wsbd_sgd_4q_2l]
eightQ_data = [adam_8q_3l, sgd_8q_3l, wsbd_adam_8q_3l, wsbd_sgd_8q_3l]
tenQ_data = [adam_10q_5l, sgd_10q_5l, wsbd_adam_10q_5l, wsbd_sgd_10q_5l]

labels = ["Adam", "SGD", "WSBD Adam", "WSBD SGD"]
titles = ["4 qubit 2 layers", "8 qubit 3 layers", "10 qubit 5 layers"]
linestyles = ['--', '--', '-', '-']
colors = ['green', 'blue', 'red', 'orange']

fig, axes = plt.subplots(1, 3, figsize=(12, 4))
for ax in axes.ravel():
    ax.set_facecolor("#e2ddddaf")
for ax, dataset, title in zip(axes, [fourQ_data, eightQ_data, tenQ_data], titles):
    for data, label, color, linestyle in zip(dataset, labels, colors, linestyles):
        x = [fp for fp, acc in data]
        y = [acc for fp, acc in data]

        # find index of max accuracy
        max_idx = y.index(max(y))

        # trim x and y up to that point (inclusive)
        x_trimmed = x[:max_idx+1]
        y_trimmed = y[:max_idx+1]

        ax.plot(x_trimmed, y_trimmed, label=f'{label}', linewidth=3, color=color, linestyle=linestyle)
        ax.legend(
            loc='lower right',
            framealpha=1,          # no transparency
            facecolor='white',     # background color
            edgecolor='black'      # border color
        )
    ax.xaxis.set_major_locator(MaxNLocator(nbins=5, integer=True))
    ax.yaxis.set_major_locator(MaxNLocator(nbins=5, prune=None)) 
    ax.tick_params(axis='both', labelsize=12)
    ax.set_title(title)
    ax.set_xlabel("Forward Passes", fontsize=12)
    ax.set_ylabel("Accuracy", fontsize=12)

plt.tight_layout()
# plt.show()


for dataset, title in zip([fourQ_data, eightQ_data, tenQ_data], titles):
    for data, label in zip(dataset, labels):
        x = [fp for fp, acc in data]
        y = [acc for fp, acc in data]
        print(f'{title} {label} Max Accuracy: {max(y):.4f}% {x[y.index(max(y))]}FP')

# QPU_time_s (from execution_spans): the on-hardware execution window(s) only — i.e., when your circuit actually occupied the QPU (including per-shot repetitions, control/readout time, any mid-circuit delays). It excludes queuing/wait, network, upload/download, and most orchestration overhead.

# wall_s~ (from time.perf_counter() around sampler.run(...); job.result()): your end-to-end client-observed latency for that run. It includes everything outside the chip: request serialization, network round-trips, service-side scheduling and queue time, any runtime preprocessing/postprocessing, result packaging, and download/deserialization.

# 4q-2l
# • QPU: 1.3535 ± 0.4083 s
# • Wall: 5.0036 ± 1.1718 s

# 8q-3l
# • QPU: 1.3125 ± 0.0271 s
# • Wall: 4.5125 ± 0.3196 s

# 10q-5l
# • QPU: 1.3139 ± 0.0355 s
# • Wall: 4.6964 ± 0.3976 s

# All circuits combined (N=300)
# • QPU: 1.3266 ± 0.2371 s
# • Wall: 4.7375 ± 0.7629 s

# [4q-2l] shots=1000 | repeats=100
#   run 001: QPU_time_s=5.269857 | wall_s~=13.576689
#   run 002: QPU_time_s=1.298973 | wall_s~=6.081939
#   run 003: QPU_time_s=1.308513 | wall_s~=4.679375
#   run 004: QPU_time_s=1.307594 | wall_s~=5.260689
#   run 005: QPU_time_s=1.331901 | wall_s~=6.290654
#   run 006: QPU_time_s=1.277891 | wall_s~=4.844687
#   run 007: QPU_time_s=1.286666 | wall_s~=5.378603
#   run 008: QPU_time_s=1.299157 | wall_s~=4.823426
#   run 009: QPU_time_s=1.291421 | wall_s~=7.030205
#   run 010: QPU_time_s=1.272705 | wall_s~=5.087238
#   run 011: QPU_time_s=1.328803 | wall_s~=5.428861
#   run 012: QPU_time_s=1.308233 | wall_s~=5.112822
#   run 013: QPU_time_s=1.269796 | wall_s~=4.798610
#   run 014: QPU_time_s=1.262974 | wall_s~=5.969217
#   run 015: QPU_time_s=1.341407 | wall_s~=4.290797
#   run 016: QPU_time_s=1.313496 | wall_s~=5.254959
#   run 017: QPU_time_s=1.292671 | wall_s~=4.579379
#   run 018: QPU_time_s=1.305706 | wall_s~=8.718645
#   run 019: QPU_time_s=1.274276 | wall_s~=4.734593
#   run 020: QPU_time_s=1.286681 | wall_s~=4.328324
#   run 021: QPU_time_s=1.306768 | wall_s~=5.452470
#   run 022: QPU_time_s=1.291947 | wall_s~=5.398678
#   run 023: QPU_time_s=1.295394 | wall_s~=4.603187
#   run 024: QPU_time_s=1.343580 | wall_s~=4.881909
#   run 025: QPU_time_s=1.286400 | wall_s~=4.891102
#   run 026: QPU_time_s=1.287202 | wall_s~=5.741752
#   run 027: QPU_time_s=1.300992 | wall_s~=4.401900
#   run 028: QPU_time_s=1.302234 | wall_s~=5.402283
#   run 029: QPU_time_s=1.322009 | wall_s~=5.027361
#   run 030: QPU_time_s=1.269858 | wall_s~=4.437765
#   run 031: QPU_time_s=1.330388 | wall_s~=4.237187
#   run 032: QPU_time_s=1.303154 | wall_s~=4.530774
#   run 033: QPU_time_s=1.276477 | wall_s~=4.616648
#   run 034: QPU_time_s=1.273004 | wall_s~=4.160336
#   run 035: QPU_time_s=1.343126 | wall_s~=4.464521
#   run 036: QPU_time_s=1.312723 | wall_s~=4.200128
#   run 037: QPU_time_s=1.331406 | wall_s~=4.504548
#   run 038: QPU_time_s=1.340056 | wall_s~=4.212472
#   run 039: QPU_time_s=1.398148 | wall_s~=4.590587
#   run 040: QPU_time_s=1.310240 | wall_s~=5.103950
#   run 041: QPU_time_s=1.281572 | wall_s~=4.824829
#   run 042: QPU_time_s=1.306369 | wall_s~=5.145983
#   run 043: QPU_time_s=1.306354 | wall_s~=4.259315
#   run 044: QPU_time_s=1.324173 | wall_s~=4.612883
#   run 045: QPU_time_s=1.295611 | wall_s~=4.800146
#   run 046: QPU_time_s=1.286392 | wall_s~=4.882337
#   run 047: QPU_time_s=1.298775 | wall_s~=4.885863
#   run 048: QPU_time_s=1.299493 | wall_s~=5.946949
#   run 049: QPU_time_s=1.273545 | wall_s~=4.598809
#   run 050: QPU_time_s=1.277500 | wall_s~=4.352438
#   run 051: QPU_time_s=1.331725 | wall_s~=4.400869
#   run 052: QPU_time_s=1.342110 | wall_s~=4.358998
#   run 053: QPU_time_s=1.291131 | wall_s~=4.846116
#   run 054: QPU_time_s=1.292242 | wall_s~=4.894529
#   run 055: QPU_time_s=1.311746 | wall_s~=5.001935
#   run 056: QPU_time_s=1.268216 | wall_s~=5.223709
#   run 057: QPU_time_s=1.302290 | wall_s~=5.630689
#   run 058: QPU_time_s=1.276381 | wall_s~=4.486704
#   run 059: QPU_time_s=1.267525 | wall_s~=4.016978
#   run 060: QPU_time_s=1.299077 | wall_s~=4.219696
#   run 061: QPU_time_s=1.301896 | wall_s~=5.372445
#   run 062: QPU_time_s=1.282878 | wall_s~=5.329322
#   run 063: QPU_time_s=1.333017 | wall_s~=4.515922
#   run 064: QPU_time_s=1.327558 | wall_s~=4.579759
#   run 065: QPU_time_s=1.315730 | wall_s~=5.316796
#   run 066: QPU_time_s=1.306227 | wall_s~=4.341870
#   run 067: QPU_time_s=1.333677 | wall_s~=5.373168
#   run 068: QPU_time_s=1.315494 | wall_s~=4.454296
#   run 069: QPU_time_s=1.269316 | wall_s~=4.741290
#   run 070: QPU_time_s=1.312137 | wall_s~=6.145308
#   run 071: QPU_time_s=1.267041 | wall_s~=4.450755
#   run 072: QPU_time_s=1.235381 | wall_s~=4.714883
#   run 073: QPU_time_s=1.293427 | wall_s~=5.658273
#   run 074: QPU_time_s=1.267159 | wall_s~=4.406180
#   run 075: QPU_time_s=1.310428 | wall_s~=4.871301
#   run 076: QPU_time_s=1.301036 | wall_s~=4.285659
#   run 077: QPU_time_s=1.330135 | wall_s~=4.332284
#   run 078: QPU_time_s=1.285614 | wall_s~=4.261509
#   run 079: QPU_time_s=1.323240 | wall_s~=4.786382
#   run 080: QPU_time_s=1.326675 | wall_s~=4.378867
#   run 081: QPU_time_s=1.293210 | wall_s~=4.742153
#   run 082: QPU_time_s=1.301916 | wall_s~=9.010346
#   run 083: QPU_time_s=1.287482 | wall_s~=4.377582
#   run 084: QPU_time_s=1.360899 | wall_s~=4.504991
#   run 085: QPU_time_s=1.303296 | wall_s~=4.370351
#   run 086: QPU_time_s=1.339053 | wall_s~=4.605263
#   run 087: QPU_time_s=1.327100 | wall_s~=4.609306
#   run 088: QPU_time_s=1.340031 | wall_s~=4.405795
#   run 089: QPU_time_s=1.284368 | wall_s~=4.121284
#   run 090: QPU_time_s=2.281118 | wall_s~=5.790991
#   run 091: QPU_time_s=1.331293 | wall_s~=4.057704
#   run 092: QPU_time_s=1.337319 | wall_s~=4.808575
#   run 093: QPU_time_s=1.279274 | wall_s~=4.371546
#   run 094: QPU_time_s=1.319010 | wall_s~=4.693351
#   run 095: QPU_time_s=1.288510 | wall_s~=4.818833
#   run 096: QPU_time_s=1.303644 | wall_s~=4.217231
#   run 097: QPU_time_s=1.330802 | wall_s~=5.257053
#   run 098: QPU_time_s=1.346095 | wall_s~=5.063428
#   run 099: QPU_time_s=1.280457 | wall_s~=5.226574
#   run 100: QPU_time_s=1.291287 | wall_s~=4.471378

# [8q-3l] shots=1000 | repeats=100
#   run 001: QPU_time_s=1.325878 | wall_s~=4.589863
#   run 002: QPU_time_s=1.315076 | wall_s~=4.336605
#   run 003: QPU_time_s=1.286797 | wall_s~=4.048681
#   run 004: QPU_time_s=1.329914 | wall_s~=4.980472
#   run 005: QPU_time_s=1.334045 | wall_s~=4.308734
#   run 006: QPU_time_s=1.293575 | wall_s~=4.727859
#   run 007: QPU_time_s=1.324214 | wall_s~=4.375019
#   run 008: QPU_time_s=1.362939 | wall_s~=4.433826
#   run 009: QPU_time_s=1.337224 | wall_s~=6.048403
#   run 010: QPU_time_s=1.320948 | wall_s~=4.907009
#   run 011: QPU_time_s=1.314814 | wall_s~=4.611565
#   run 012: QPU_time_s=1.303775 | wall_s~=3.943692
#   run 013: QPU_time_s=1.279921 | wall_s~=4.689254
#   run 014: QPU_time_s=1.333763 | wall_s~=4.218635
#   run 015: QPU_time_s=1.360115 | wall_s~=5.067082
#   run 016: QPU_time_s=1.294857 | wall_s~=4.433097
#   run 017: QPU_time_s=1.175643 | wall_s~=4.160732
#   run 018: QPU_time_s=1.337203 | wall_s~=4.636065
#   run 019: QPU_time_s=1.286554 | wall_s~=4.161056
#   run 020: QPU_time_s=1.309196 | wall_s~=4.347932
#   run 021: QPU_time_s=1.297896 | wall_s~=4.653925
#   run 022: QPU_time_s=1.277144 | wall_s~=4.264800
#   run 023: QPU_time_s=1.316968 | wall_s~=4.489884
#   run 024: QPU_time_s=1.291891 | wall_s~=4.369613
#   run 025: QPU_time_s=1.309469 | wall_s~=4.347334
#   run 026: QPU_time_s=1.284482 | wall_s~=4.968427
#   run 027: QPU_time_s=1.299713 | wall_s~=4.786788
#   run 028: QPU_time_s=1.316263 | wall_s~=4.657529
#   run 029: QPU_time_s=1.281798 | wall_s~=4.510804
#   run 030: QPU_time_s=1.320474 | wall_s~=4.166159
#   run 031: QPU_time_s=1.353104 | wall_s~=4.488862
#   run 032: QPU_time_s=1.289438 | wall_s~=3.998057
#   run 033: QPU_time_s=1.331874 | wall_s~=4.202994
#   run 034: QPU_time_s=1.330719 | wall_s~=4.529252
#   run 035: QPU_time_s=1.301783 | wall_s~=4.403682
#   run 036: QPU_time_s=1.279778 | wall_s~=4.178867
#   run 037: QPU_time_s=1.317815 | wall_s~=4.460686
#   run 038: QPU_time_s=1.311938 | wall_s~=4.128378
#   run 039: QPU_time_s=1.343784 | wall_s~=4.827864
#   run 040: QPU_time_s=1.337831 | wall_s~=4.466331
#   run 041: QPU_time_s=1.379331 | wall_s~=4.308686
#   run 042: QPU_time_s=1.309737 | wall_s~=4.671955
#   run 043: QPU_time_s=1.275389 | wall_s~=4.267970
#   run 044: QPU_time_s=1.325559 | wall_s~=4.323082
#   run 045: QPU_time_s=1.300631 | wall_s~=4.461090
#   run 046: QPU_time_s=1.326502 | wall_s~=4.338847
#   run 047: QPU_time_s=1.306892 | wall_s~=4.643903
#   run 048: QPU_time_s=1.331767 | wall_s~=4.905356
#   run 049: QPU_time_s=1.297904 | wall_s~=4.451372
#   run 050: QPU_time_s=1.323963 | wall_s~=4.473689
#   run 051: QPU_time_s=1.314983 | wall_s~=4.528313
#   run 052: QPU_time_s=1.310540 | wall_s~=4.237373
#   run 053: QPU_time_s=1.305965 | wall_s~=5.129063
#   run 054: QPU_time_s=1.325555 | wall_s~=4.225896
#   run 055: QPU_time_s=1.355224 | wall_s~=4.610007
#   run 056: QPU_time_s=1.274744 | wall_s~=4.091244
#   run 057: QPU_time_s=1.312252 | wall_s~=5.065507
#   run 058: QPU_time_s=1.317414 | wall_s~=4.194546
#   run 059: QPU_time_s=1.325153 | wall_s~=4.339592
#   run 060: QPU_time_s=1.328247 | wall_s~=4.726835
#   run 061: QPU_time_s=1.339444 | wall_s~=4.736709
#   run 062: QPU_time_s=1.327928 | wall_s~=4.492041
#   run 063: QPU_time_s=1.322725 | wall_s~=4.750517
#   run 064: QPU_time_s=1.343155 | wall_s~=4.615052
#   run 065: QPU_time_s=1.294247 | wall_s~=4.587256
#   run 066: QPU_time_s=1.314468 | wall_s~=4.275135
#   run 067: QPU_time_s=1.340495 | wall_s~=4.322419
#   run 068: QPU_time_s=1.330805 | wall_s~=4.616130
#   run 069: QPU_time_s=1.333563 | wall_s~=4.193951
#   run 070: QPU_time_s=1.347718 | wall_s~=4.823318
#   run 071: QPU_time_s=1.343167 | wall_s~=4.269882
#   run 072: QPU_time_s=1.271216 | wall_s~=4.072814
#   run 073: QPU_time_s=1.278976 | wall_s~=4.243066
#   run 074: QPU_time_s=1.282267 | wall_s~=4.262195
#   run 075: QPU_time_s=1.342386 | wall_s~=4.423098
#   run 076: QPU_time_s=1.285382 | wall_s~=4.364330
#   run 077: QPU_time_s=1.319518 | wall_s~=4.318329
#   run 078: QPU_time_s=1.339312 | wall_s~=4.274792
#   run 079: QPU_time_s=1.271340 | wall_s~=4.666068
#   run 080: QPU_time_s=1.293500 | wall_s~=4.247699
#   run 081: QPU_time_s=1.351628 | wall_s~=4.727935
#   run 082: QPU_time_s=1.311380 | wall_s~=4.778906
#   run 083: QPU_time_s=1.291570 | wall_s~=4.501841
#   run 084: QPU_time_s=1.331016 | wall_s~=5.065149
#   run 085: QPU_time_s=1.343411 | wall_s~=4.492716
#   run 086: QPU_time_s=1.314607 | wall_s~=4.624621
#   run 087: QPU_time_s=1.304914 | wall_s~=4.948045
#   run 088: QPU_time_s=1.308663 | wall_s~=4.287783
#   run 089: QPU_time_s=1.297700 | wall_s~=4.457721
#   run 090: QPU_time_s=1.289687 | wall_s~=4.656525
#   run 091: QPU_time_s=1.310446 | wall_s~=4.298400
#   run 092: QPU_time_s=1.273385 | wall_s~=4.864748
#   run 093: QPU_time_s=1.276039 | wall_s~=5.318523
#   run 094: QPU_time_s=1.315142 | wall_s~=4.311584
#   run 095: QPU_time_s=1.315405 | wall_s~=4.186546
#   run 096: QPU_time_s=1.280572 | wall_s~=4.632223
#   run 097: QPU_time_s=1.303640 | wall_s~=5.025544
#   run 098: QPU_time_s=1.318262 | wall_s~=4.402438
#   run 099: QPU_time_s=1.320672 | wall_s~=4.382754
#   run 100: QPU_time_s=1.297122 | wall_s~=4.806751

# [10q-5l] shots=1000 | repeats=100
#   run 001: QPU_time_s=1.307334 | wall_s~=4.401912
#   run 002: QPU_time_s=1.296180 | wall_s~=4.578990
#   run 003: QPU_time_s=1.278290 | wall_s~=4.442903
#   run 004: QPU_time_s=1.285747 | wall_s~=4.134672
#   run 005: QPU_time_s=1.303010 | wall_s~=4.053940
#   run 006: QPU_time_s=1.301619 | wall_s~=4.554069
#   run 007: QPU_time_s=1.351196 | wall_s~=4.553129
#   run 008: QPU_time_s=1.492383 | wall_s~=4.896855
#   run 009: QPU_time_s=1.298665 | wall_s~=4.294414
#   run 010: QPU_time_s=1.299891 | wall_s~=4.491240
#   run 011: QPU_time_s=1.312530 | wall_s~=4.227396
#   run 012: QPU_time_s=1.327279 | wall_s~=4.612092
#   run 013: QPU_time_s=1.353219 | wall_s~=4.147907
#   run 014: QPU_time_s=1.299712 | wall_s~=4.284584
#   run 015: QPU_time_s=1.309170 | wall_s~=4.931112
#   run 016: QPU_time_s=1.296549 | wall_s~=4.555938
#   run 017: QPU_time_s=1.320733 | wall_s~=4.459108
#   run 018: QPU_time_s=1.307886 | wall_s~=4.848777
#   run 019: QPU_time_s=1.277411 | wall_s~=4.684555
#   run 020: QPU_time_s=1.308807 | wall_s~=4.657059
#   run 021: QPU_time_s=1.282908 | wall_s~=6.575358
#   run 022: QPU_time_s=1.330077 | wall_s~=4.485147
#   run 023: QPU_time_s=1.306467 | wall_s~=4.455705
#   run 024: QPU_time_s=1.345861 | wall_s~=4.339004
#   run 025: QPU_time_s=1.317289 | wall_s~=4.798333
#   run 026: QPU_time_s=1.338544 | wall_s~=5.635974
#   run 027: QPU_time_s=1.336146 | wall_s~=4.753503
#   run 028: QPU_time_s=1.289030 | wall_s~=4.743323
#   run 029: QPU_time_s=1.309492 | wall_s~=5.563995
#   run 030: QPU_time_s=1.335853 | wall_s~=5.048950
#   run 031: QPU_time_s=1.320955 | wall_s~=4.549902
#   run 032: QPU_time_s=1.289581 | wall_s~=4.684954
#   run 033: QPU_time_s=1.307161 | wall_s~=4.257894
#   run 034: QPU_time_s=1.351298 | wall_s~=4.452299
#   run 035: QPU_time_s=1.270571 | wall_s~=4.872652
#   run 036: QPU_time_s=1.349589 | wall_s~=4.770226
#   run 037: QPU_time_s=1.339533 | wall_s~=4.347541
#   run 038: QPU_time_s=1.314142 | wall_s~=4.537172
#   run 039: QPU_time_s=1.278931 | wall_s~=4.272241
#   run 040: QPU_time_s=1.294638 | wall_s~=4.548863
#   run 041: QPU_time_s=1.279471 | wall_s~=4.322707
#   run 042: QPU_time_s=1.311427 | wall_s~=4.692240
#   run 043: QPU_time_s=1.313890 | wall_s~=4.694443
#   run 044: QPU_time_s=1.320531 | wall_s~=4.953002
#   run 045: QPU_time_s=1.294800 | wall_s~=4.757586
#   run 046: QPU_time_s=1.339008 | wall_s~=4.405162
#   run 047: QPU_time_s=1.334032 | wall_s~=4.238099
#   run 048: QPU_time_s=1.284465 | wall_s~=4.840828
#   run 049: QPU_time_s=1.310711 | wall_s~=4.699047
#   run 050: QPU_time_s=1.304058 | wall_s~=4.895491
#   run 051: QPU_time_s=1.281234 | wall_s~=4.754367
#   run 052: QPU_time_s=1.301787 | wall_s~=5.057886
#   run 053: QPU_time_s=1.321992 | wall_s~=5.076937
#   run 054: QPU_time_s=1.268792 | wall_s~=4.551543
#   run 055: QPU_time_s=1.306343 | wall_s~=4.354307
#   run 056: QPU_time_s=1.319276 | wall_s~=4.951576
#   run 057: QPU_time_s=1.290848 | wall_s~=4.685387
#   run 058: QPU_time_s=1.298747 | wall_s~=4.603465
#   run 059: QPU_time_s=1.313022 | wall_s~=4.382259
#   run 060: QPU_time_s=1.307110 | wall_s~=4.172104
#   run 061: QPU_time_s=1.286982 | wall_s~=4.693550
#   run 062: QPU_time_s=1.297091 | wall_s~=4.351772
#   run 063: QPU_time_s=1.305582 | wall_s~=4.913949
#   run 064: QPU_time_s=1.275328 | wall_s~=4.206225
#   run 065: QPU_time_s=1.291388 | wall_s~=4.914212
#   run 066: QPU_time_s=1.393725 | wall_s~=4.844514
#   run 067: QPU_time_s=1.310848 | wall_s~=4.349688
#   run 068: QPU_time_s=1.359749 | wall_s~=4.317540
#   run 069: QPU_time_s=1.319239 | wall_s~=5.345116
#   run 070: QPU_time_s=1.288194 | wall_s~=4.764505
#   run 071: QPU_time_s=1.296851 | wall_s~=6.162034
#   run 072: QPU_time_s=1.335872 | wall_s~=4.292711
#   run 073: QPU_time_s=1.335474 | wall_s~=4.601376
#   run 074: QPU_time_s=1.275473 | wall_s~=4.902390
#   run 075: QPU_time_s=1.507402 | wall_s~=4.705160
#   run 076: QPU_time_s=1.329563 | wall_s~=5.509554
#   run 077: QPU_time_s=1.321072 | wall_s~=4.674549
#   run 078: QPU_time_s=1.348365 | wall_s~=4.474188
#   run 079: QPU_time_s=1.298062 | wall_s~=4.695142
#   run 080: QPU_time_s=1.315190 | wall_s~=4.395406
#   run 081: QPU_time_s=1.311379 | wall_s~=4.521808
#   run 082: QPU_time_s=1.267961 | wall_s~=5.176538
#   run 083: QPU_time_s=1.335293 | wall_s~=4.612039
#   run 084: QPU_time_s=1.294983 | wall_s~=4.904548
#   run 085: QPU_time_s=1.311360 | wall_s~=4.783458
#   run 086: QPU_time_s=1.305787 | wall_s~=4.873126
#   run 087: QPU_time_s=1.363424 | wall_s~=4.687891
#   run 088: QPU_time_s=1.305342 | wall_s~=4.342645
#   run 089: QPU_time_s=1.290375 | wall_s~=4.821146
#   run 090: QPU_time_s=1.299792 | wall_s~=4.897617
#   run 091: QPU_time_s=1.308663 | wall_s~=5.255738
#   run 092: QPU_time_s=1.303969 | wall_s~=4.645743
#   run 093: QPU_time_s=1.297688 | wall_s~=4.556267
#   run 094: QPU_time_s=1.310744 | wall_s~=5.071642
#   run 095: QPU_time_s=1.313604 | wall_s~=5.334886
#   run 096: QPU_time_s=1.281687 | wall_s~=4.714635
#   run 097: QPU_time_s=1.338517 | wall_s~=4.813401
#   run 098: QPU_time_s=1.344777 | wall_s~=4.443002
#   run 099: QPU_time_s=1.284468 | wall_s~=4.453965
#   run 100: QPU_time_s=1.294852 | wall_s~=5.028617

# === Summary (per circuit) ===
# 4q-2l | N=100 | mean=1.353503s | median=1.302262s | p10=1.272735s | p90=1.340054s
# 8q-3l | N=100 | mean=1.312452s | median=1.314898s | p10=1.279792s | p90=1.343166s
# 10q-5l | N=100 | mean=1.313933s | median=1.307610s | p10=1.281279s | p90=1.348115s